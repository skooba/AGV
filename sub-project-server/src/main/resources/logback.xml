<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scan="true"> <!-- setting debug="true" inspects the internal state of the logback.xml | scan="true" allows library to reload config file when they're modified -->
    <property name="LOG_PATH" value="./agv/logs"/>
    <property name="LOG_ARCHIVE" value="${LOG_PATH}/archived_logs"/>
    <timestamp key="timestamp-by-second" datePattern="yyyyMMdd'T'HHmmss"/>

    <appender name="Console-Appender" level = "INFO"
              class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>%msg%n</pattern>
        </encoder>
    </appender>

    <appender name="File-Appender" level = "DEBUG"
              class="ch.qos.logback.core.FileAppender">
        <file>${LOG_PATH}/lastrunlog.log</file>
        <encoder>
            <pattern>%d{MM-dd-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{5} %method - %msg%n</pattern>
        </encoder>
        <append>
            false
        </append>
    </appender>

    <appender name="RollingFile-Appender" level="DEBUG"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/dailyLog.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_ARCHIVE}/%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>200MB</maxFileSize>
            <maxHistory>5</maxHistory>
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%d{MM-dd-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{5} %method - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- used when "${MOCHILA_ENV}" = PRODUCTION-->
<!--    <appender name="PRODUCTION" class="com.rollbar.logback.RollbarAppender">-->
<!--        <accessToken>223956bc91284630a5fb45e1576221c1</accessToken>-->
<!--        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">-->
<!--            <jsonGeneratorDecorator class="com.mochilafulfillment.common.logback.MaskingJsonGeneratorDecorator"/>-->
<!--            <jsonFactoryDecorator class="com.mochilafulfillment.common.JSONObjectDecorator"/>-->
<!--            <providers>-->
<!--                <pattern>-->
<!--                    &lt;!&ndash;set environmental variables up on AGV computer https://www.serverlab.ca/tutorials/linux/administration-linux/how-to-set-environment-variables-in-linux/&ndash;&gt;-->
<!--                    {-->
<!--                    "mochila_environment":"${MOCHILA_ENV}",-->
<!--                    }-->
<!--                </pattern>-->
<!--                <timestamp></timestamp>-->
<!--                <version></version>-->
<!--                <message></message>-->
<!--                <loggerName></loggerName>-->
<!--                <threadName></threadName>-->
<!--                <logLevel></logLevel>-->
<!--                <logLevelValue></logLevelValue>-->
<!--                <stackTrace></stackTrace>-->
<!--                <stackHash></stackHash>-->
<!--                <tags></tags>-->
<!--                <arguments></arguments>-->
<!--            </providers>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--     empty for when "${MOCHILA_ENV}" = TEST-->
    <appender name="TEST" level="DEBUG" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%msg</pattern>
        </encoder>
    </appender>

    <logger name="com.example.rollbar.logback" level="ERROR" additivity="false">
        <appender-ref ref="${MOCHILA_ENV}" />
    </logger>

    <root>
        <appender-ref ref="Console-Appender" />
        <appender-ref ref="RollingFile-Appender"/>
        <appender-ref ref="File-Appender"/>
    </root>

</configuration>